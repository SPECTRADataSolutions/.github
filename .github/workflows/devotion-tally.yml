name: devotionTally

on:
  issues:
    types: [labeled, unlabeled, edited]
  issue_comment:
    types: [created]
  reaction:
    types: [created]

permissions:
  issues: write
  pull-requests: read

jobs:
  tally:
    runs-on: ubuntu-latest
    steps:
      - name: Compute and post tally
        uses: actions/github-script@v7
        with:
          script: |
            // Get issue from the appropriate payload context
            let issue = context.payload.issue;
            if (!issue && context.payload.comment) {
              // For comment events, get issue from comment context
              issue = context.payload.comment.issue || context.payload.issue;
            }
            if (!issue) {
              console.log('No issue found in payload, skipping');
              return;
            }

            // Check if issue has required labels
            const labels = (issue.labels || []).map(l => typeof l === 'string' ? l : l.name);
            const hasPrayer = labels.includes('prayer');
            const isFeature = labels.includes('type:feature');
            
            if (!hasPrayer || !isFeature) {
              console.log('Issue does not have both prayer and type:feature labels, skipping');
              return;
            }

            console.log(`Processing devotion tally for issue #${issue.number}: ${issue.title}`);

            // Get '+1' reactions on issue body
            const reactions = await github.rest.reactions.listForIssue({
              ...context.repo,
              issue_number: issue.number,
              per_page: 100
            });
            const plusOnes = reactions.data.filter(r => r.content === '+1').length;

            // Count '/endorse' comments
            const comments = await github.rest.issues.listComments({
              ...context.repo,
              issue_number: issue.number,
              per_page: 100
            });
            const endorsements = comments.data.filter(c => /^\/endorse\b/i.test(c.body || '')).length;

            // Council boost if label present
            const councilBoost = labels.includes('council-endorsed') ? 5 : 0;

            const tally = (plusOnes * 1) + (endorsements * 3) + councilBoost;
            const threshold = 20;
            const remaining = Math.max(0, threshold - tally);

            console.log(`Tally calculation: ${plusOnes} +1s (${plusOnes * 1}) + ${endorsements} endorsements (${endorsements * 3}) + council boost (${councilBoost}) = ${tally}`);

            const body = tally >= threshold
              ? `🙏 Devotion tally: **${tally}** (threshold ${threshold}) — ready for promotion. Consider creating an Initiative or Epic and linking this issue. Adding label 'roadmap-candidate'.`
              : `🙏 Devotion tally: **${tally}** (threshold ${threshold}). ${remaining} more needed to reach promotion.`;

            await github.rest.issues.createComment({
              ...context.repo,
              issue_number: issue.number,
              body
            });

            if (tally >= threshold) {
              try {
                await github.rest.issues.addLabels({
                  ...context.repo,
                  issue_number: issue.number,
                  labels: ['roadmap-candidate']
                });
                console.log('Added roadmap-candidate label');
              } catch (e) {
                console.log('Could not add roadmap-candidate label (may not exist):', e.message);
              }
            }