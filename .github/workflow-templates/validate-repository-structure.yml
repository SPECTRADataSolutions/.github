name: validate-repository-structure

on:
  workflow_dispatch:
    inputs:
      repoType:
        description: "engineering|operations|applications|governance|content"
        type: string
        required: false
      standardUrl:
        description: "Override standard URL"
        type: string
        required: false

permissions:
  contents: read

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: pip install pyyaml
      - name: fetch-standard
        run: |
          if [ -f ".github/repoStructureStandard.yml" ]; then
            cp .github/repoStructureStandard.yml standard.yml
          else
            curl -fsSL "${{ github.event.inputs.standardUrl || 'https://raw.githubusercontent.com/SPECTRADataSolutions/.github/main/.github/repoStructureStandard.yml' }}" -o standard.yml
          fi
      - name: run-structure-guard
        env:
          REPO_TYPE: ${{ github.event.inputs.repoType }}
        run: |
          python - <<'PY'
          import os, yaml, pathlib
          std_path = pathlib.Path('standard.yml')
          if not std_path.exists():
              print('ERROR: standard.yml missing')
              exit(1)
          std = yaml.safe_load(std_path.read_text(encoding='utf-8')) or {}
          issues, warnings = [], []
          def exists(p): return pathlib.Path(p).exists()
          for f in std.get('requiredRootFiles', []):
              if not exists(f): issues.append(f"Missing required root file: {f}")
          readme = pathlib.Path('README.md').read_text(encoding='utf-8') if exists('README.md') else ''
          if std.get('branding', {}).get('enforceSpectraAllCaps') and 'spectra' in readme and 'SPECTRA' not in readme:
              warnings.append("Use 'SPECTRA' in all caps for brand consistency")
          if issues:
              print('\n'.join(f"ERROR: {i}" for i in issues))
              if warnings: print('\n'.join(f"WARN: {w}" for w in warnings))
              exit(1)
          if warnings:
              print('\n'.join(f"WARN: {w}" for w in warnings))
          print('Structure validation passed')
          PY
